"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const addon_1 = __importDefault(require("../utils/addon"));
const Component_1 = require("../core/Component");
const helpers_1 = require("../utils/helpers");
class QPixmap extends Component_1.Component {
    constructor(arg) {
        super();
        this.load = (imageUrl) => {
            return this.native.load(imageUrl);
        };
        this.save = (fileName, format) => {
            //TODO: quality argument
            return format ? this.native.save(fileName, format) : this.native.save(fileName);
        };
        this.scaled = (width, height, aspectRatioMode) => {
            let nativePixmap;
            if (aspectRatioMode) {
                nativePixmap = this.native.scaled(width, height, aspectRatioMode);
            }
            else {
                nativePixmap = this.native.scaled(width, height);
            }
            return new QPixmap(nativePixmap);
        };
        if (typeof arg === 'string') {
            const imageUrl = arg;
            this.native = new addon_1.default.QPixmap(imageUrl);
        }
        else if (helpers_1.checkIfNativeElement(arg)) {
            this.native = arg;
        }
        else {
            this.native = new addon_1.default.QPixmap();
        }
    }
}
exports.QPixmap = QPixmap;
