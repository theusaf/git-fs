"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const addon_1 = __importDefault(require("../utils/addon"));
const QWidget_1 = require("./QWidget");
const EventWidget_1 = require("../core/EventWidget");
exports.QProgressBarEvents = Object.freeze(Object.assign({}, EventWidget_1.BaseWidgetEvents));
class QProgressBar extends QWidget_1.NodeWidget {
    constructor(parent) {
        let native;
        if (parent) {
            native = new addon_1.default.QProgressBar(parent.native);
        }
        else {
            native = new addon_1.default.QProgressBar();
        }
        super(native);
        this.native = native;
        this.nodeParent = parent;
    }
    setValue(value) {
        // react:✓
        this.native.setValue(value);
    }
    value() {
        // react:✓
        return this.native.value();
    }
    setMinimum(min) {
        // react:✓ TODO://getter
        this.native.setMinimum(min);
    }
    setMaximum(max) {
        // react:✓ TODO://getter
        this.native.setMaximum(max);
    }
    setOrientation(orientation) {
        // react:✓ TODO://getter
        this.native.setOrientation(orientation);
    }
}
exports.QProgressBar = QProgressBar;
