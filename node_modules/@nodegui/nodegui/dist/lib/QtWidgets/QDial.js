"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const addon_1 = __importDefault(require("../utils/addon"));
const EventWidget_1 = require("../core/EventWidget");
const QAbstractSlider_1 = require("./QAbstractSlider");
exports.QDialEvents = Object.freeze(Object.assign(Object.assign({}, EventWidget_1.BaseWidgetEvents), { valueChanged: 'valueChanged', rangeChanged: 'rangeChanged', sliderMoved: 'sliderMoved', sliderPressed: 'sliderPressed', sliderReleased: 'sliderReleased' }));
class QDial extends QAbstractSlider_1.QAbstractSlider {
    constructor(parent) {
        let native;
        if (parent) {
            native = new addon_1.default.QDial(parent.native);
        }
        else {
            native = new addon_1.default.QDial();
        }
        super(native);
        this.native = native;
        this.nodeParent = parent;
    }
    setNotchesVisible(visible) {
        // react:✓
        this.native.setNotchesVisible(visible);
    }
    notchesVisible() {
        // react:✓
        return this.native.notchesVisible();
    }
    setWrapping(on) {
        // react:✓
        this.native.setWrapping(on);
    }
    wrapping() {
        // react:✓
        return this.native.wrapping();
    }
    setNotchTarget(target) {
        // react:✓
        this.native.setNotchTarget(target);
    }
    notchTarget() {
        // react:✓
        return this.native.notchTarget();
    }
}
exports.QDial = QDial;
