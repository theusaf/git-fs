"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const addon_1 = __importDefault(require("../utils/addon"));
const EventWidget_1 = require("../core/EventWidget");
const QObject_1 = require("../QtCore/QObject");
exports.QSystemTrayIconEvents = Object.freeze(Object.assign({}, EventWidget_1.BaseWidgetEvents));
class QSystemTrayIcon extends QObject_1.NodeObject {
    constructor(parent) {
        let native;
        if (parent) {
            native = new addon_1.default.QSystemTrayIcon(parent.native);
        }
        else {
            native = new addon_1.default.QSystemTrayIcon();
        }
        super(native);
        this.native = native;
    }
    show() {
        this.native.show();
    }
    hide() {
        this.native.hide();
    }
    setIcon(icon) {
        this.native.setIcon(icon.native);
    }
    isVisible() {
        return this.native.isVisible();
    }
    setToolTip(tooltip) {
        this.native.setToolTip(tooltip);
    }
    setContextMenu(menu) {
        this.contextMenu = menu;
        this.native.setContextMenu(this.contextMenu.native);
    }
}
exports.QSystemTrayIcon = QSystemTrayIcon;
