import { NodeWidget } from './QWidget';
import { NativeElement } from '../core/Component';
export declare const QLineEditEvents: Readonly<{
    cursorPositionChanged: string;
    editingFinished: string;
    inputRejected: string;
    returnPressed: string;
    selectionChanged: string;
    textChanged: string;
    textEdited: string;
    None: string;
    ActionAdded: string;
    ActionChanged: string;
    ActionRemoved: string;
    ActivationChange: string;
    ApplicationActivate: string;
    ApplicationActivated: string;
    ApplicationDeactivate: string;
    ApplicationFontChange: string;
    ApplicationLayoutDirectionChange: string;
    ApplicationPaletteChange: string;
    ApplicationStateChange: string;
    ApplicationWindowIconChange: string;
    ChildAdded: string;
    ChildPolished: string;
    ChildRemoved: string;
    Clipboard: string;
    Close: string;
    CloseSoftwareInputPanel: string;
    ContentsRectChange: string;
    ContextMenu: string;
    CursorChange: string;
    DeferredDelete: string;
    DragEnter: string;
    DragLeave: string;
    DragMove: string;
    Drop: string;
    DynamicPropertyChange: string;
    EnabledChange: string;
    Enter: string;
    EnterWhatsThisMode: string;
    Expose: string;
    FileOpen: string;
    FocusIn: string;
    FocusOut: string;
    FocusAboutToChange: string;
    FontChange: string;
    Gesture: string;
    GestureOverride: string;
    GrabKeyboard: string;
    GrabMouse: string;
    GraphicsSceneContextMenu: string;
    GraphicsSceneDragEnter: string;
    GraphicsSceneDragLeave: string;
    GraphicsSceneDragMove: string;
    GraphicsSceneDrop: string;
    GraphicsSceneHelp: string;
    GraphicsSceneHoverEnter: string;
    GraphicsSceneHoverLeave: string;
    GraphicsSceneHoverMove: string;
    GraphicsSceneMouseDoubleClick: string;
    GraphicsSceneMouseMove: string;
    GraphicsSceneMousePress: string;
    GraphicsSceneMouseRelease: string;
    GraphicsSceneMove: string;
    GraphicsSceneResize: string;
    GraphicsSceneWheel: string;
    Hide: string;
    HideToParent: string;
    HoverEnter: string;
    HoverLeave: string;
    HoverMove: string;
    IconDrag: string;
    IconTextChange: string;
    InputMethod: string;
    InputMethodQuery: string;
    KeyboardLayoutChange: string;
    KeyPress: string;
    KeyRelease: string;
    LanguageChange: string;
    LayoutDirectionChange: string;
    LayoutRequest: string;
    Leave: string;
    LeaveWhatsThisMode: string;
    LocaleChange: string;
    NonClientAreaMouseButtonDblClick: string;
    NonClientAreaMouseButtonPress: string;
    NonClientAreaMouseButtonRelease: string;
    NonClientAreaMouseMove: string;
    MacSizeChange: string;
    MetaCall: string;
    ModifiedChange: string;
    MouseButtonDblClick: string;
    MouseButtonPress: string;
    MouseButtonRelease: string;
    MouseMove: string;
    MouseTrackingChange: string;
    Move: string;
    NativeGesture: string;
    OrientationChange: string;
    Paint: string;
    PaletteChange: string;
    ParentAboutToChange: string;
    ParentChange: string;
    PlatformPanel: string;
    PlatformSurface: string;
    Polish: string;
    PolishRequest: string;
    QueryWhatsThis: string;
    ReadOnlyChange: string;
    RequestSoftwareInputPanel: string;
    Resize: string;
    ScrollPrepare: string;
    Scroll: string;
    Shortcut: string;
    ShortcutOverride: string;
    Show: string;
    ShowToParent: string;
    SockAct: string;
    StateMachineSignal: string;
    StateMachineWrapped: string;
    StatusTip: string;
    StyleChange: string;
    TabletMove: string;
    TabletPress: string;
    TabletRelease: string;
    TabletEnterProximity: string;
    TabletLeaveProximity: string;
    TabletTrackingChange: string;
    ThreadChange: string;
    Timer: string;
    ToolBarChange: string;
    ToolTip: string;
    ToolTipChange: string;
    TouchBegin: string;
    TouchCancel: string;
    TouchEnd: string;
    TouchUpdate: string;
    UngrabKeyboard: string;
    UngrabMouse: string;
    UpdateLater: string;
    UpdateRequest: string;
    WhatsThis: string;
    WhatsThisClicked: string;
    Wheel: string;
    WinEventAct: string;
    WindowActivate: string;
    WindowBlocked: string;
    WindowDeactivate: string;
    WindowIconChange: string;
    WindowStateChange: string;
    WindowTitleChange: string;
    WindowUnblocked: string;
    WinIdChange: string;
    ZOrderChange: string;
}>;
export declare class QLineEdit extends NodeWidget {
    native: NativeElement;
    placeholderText?: string;
    constructor(parent?: NodeWidget);
    setText(text: string): void;
    text(): string;
    setPlaceholderText(text: string): void;
    setReadOnly(isReadOnly: boolean): void;
    clear(): void;
}
