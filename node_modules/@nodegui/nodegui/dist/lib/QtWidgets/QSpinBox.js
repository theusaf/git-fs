"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const addon_1 = __importDefault(require("../utils/addon"));
const QWidget_1 = require("./QWidget");
const EventWidget_1 = require("../core/EventWidget");
exports.QSpinBoxEvents = Object.freeze(Object.assign(Object.assign({}, EventWidget_1.BaseWidgetEvents), { valueChanged: 'valueChanged' }));
class QSpinBox extends QWidget_1.NodeWidget {
    constructor(parent) {
        let native;
        if (parent) {
            native = new addon_1.default.QSpinBox(parent.native);
        }
        else {
            native = new addon_1.default.QSpinBox();
        }
        super(native);
        this.nodeParent = parent;
        this.native = native;
    }
    setPrefix(prefix) {
        // react:✓
        this.native.setPrefix(prefix);
    }
    setSuffix(suffix) {
        // react:✓
        this.native.setSuffix(suffix);
    }
    cleanText() {
        // react:✓
        return this.native.cleanText();
    }
    setSingleStep(val) {
        // react:✓
        this.native.setSingleStep(val);
    }
    setRange(minimum, maximum) {
        // react:✓
        this.native.setRange(minimum, maximum);
    }
    maximum() {
        // react:✓
        return this.native.maximum();
    }
    minimum() {
        // react:✓
        return this.native.minimum();
    }
    setValue(val) {
        // react:✓
        this.native.setValue(val);
    }
    value() {
        // react:✓
        return this.native.value();
    }
}
exports.QSpinBox = QSpinBox;
