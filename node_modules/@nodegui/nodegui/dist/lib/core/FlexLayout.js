"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const addon_1 = __importDefault(require("../utils/addon"));
const QLayout_1 = require("../QtWidgets/QLayout");
class FlexLayout extends QLayout_1.NodeLayout {
    constructor() {
        super(...arguments);
        this.native = new addon_1.default.FlexLayout();
    }
    addWidget(childWidget, childFlexNode) {
        const childYogaNode = childFlexNode || childWidget.getFlexNode();
        this.nodeChildren.add(childWidget);
        this.native.addWidget(childWidget.native, childYogaNode);
    }
    insertChildBefore(childWidget, beforeChildWidget, childFlexNode, beforeChildFlexNode) {
        const childYogaNode = childFlexNode || childWidget.getFlexNode();
        const beforeChildYogaNode = beforeChildFlexNode || beforeChildWidget.getFlexNode();
        this.nodeChildren.add(childWidget); // No orderer required yet, so just inserting at the end.
        this.native.insertChildBefore(childWidget.native, beforeChildYogaNode, childYogaNode);
    }
    removeWidget(childWidget, childFlexNode) {
        if (!this.nodeChildren.has(childWidget)) {
            return;
        }
        const childYogaNode = childFlexNode || childWidget.getFlexNode();
        this.nodeChildren.delete(childWidget);
        this.native.removeWidget(childWidget.native, childYogaNode);
    }
    setFlexNode(flexNode) {
        this.flexNode = flexNode;
        this.native.setFlexNode(flexNode);
    }
}
exports.FlexLayout = FlexLayout;
